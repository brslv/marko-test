{
  "_args": [
    [
      {
        "raw": "complain@^1.0.0",
        "scope": null,
        "escapedName": "complain",
        "name": "complain",
        "rawSpec": "^1.0.0",
        "spec": ">=1.0.0 <2.0.0",
        "type": "range"
      },
      "/Users/borislav/Development/Web/box/@Experimenting/marko/node_modules/marko"
    ]
  ],
  "_from": "complain@>=1.0.0 <2.0.0",
  "_id": "complain@1.0.0",
  "_inCache": true,
  "_location": "/complain",
  "_nodeVersion": "4.4.3",
  "_npmOperationalInternal": {
    "host": "packages-18-east.internal.npmjs.com",
    "tmp": "tmp/complain-1.0.0.tgz_1481689339639_0.3349409350194037"
  },
  "_npmUser": {
    "name": "mlrawlings",
    "email": "ml.rawlings@gmail.com"
  },
  "_npmVersion": "2.15.1",
  "_phantomChildren": {},
  "_requested": {
    "raw": "complain@^1.0.0",
    "scope": null,
    "escapedName": "complain",
    "name": "complain",
    "rawSpec": "^1.0.0",
    "spec": ">=1.0.0 <2.0.0",
    "type": "range"
  },
  "_requiredBy": [
    "/htmljs-parser",
    "/marko"
  ],
  "_resolved": "https://registry.npmjs.org/complain/-/complain-1.0.0.tgz",
  "_shasum": "d7ccbbe342df3ebf37201b2cf3d88b6f00e6f5f5",
  "_shrinkwrap": null,
  "_spec": "complain@^1.0.0",
  "_where": "/Users/borislav/Development/Web/box/@Experimenting/marko/node_modules/marko",
  "author": {
    "name": "Michael Rawlings"
  },
  "bugs": {
    "url": "https://github.com/mlrawlings/complain/issues"
  },
  "dependencies": {},
  "description": "Mark methods as deprecated and warn the user when they're called",
  "devDependencies": {
    "mocha": "~1.8.1"
  },
  "directories": {},
  "dist": {
    "shasum": "d7ccbbe342df3ebf37201b2cf3d88b6f00e6f5f5",
    "tarball": "https://registry.npmjs.org/complain/-/complain-1.0.0.tgz"
  },
  "gitHead": "284a03c78f0f0b3a5ba43744bdfced9d1069d354",
  "homepage": "https://github.com/mlrawlings/complain#readme",
  "keywords": [
    "deprecate",
    "complain"
  ],
  "license": "MIT",
  "main": "index.js",
  "maintainers": [
    {
      "name": "mlrawlings",
      "email": "ml.rawlings@gmail.com"
    }
  ],
  "name": "complain",
  "optionalDependencies": {},
  "readme": "# complain\n\nMark methods as deprecated and warn the user when they're called. Forked from [brianc/node-deprecate](https://github.com/brianc/node-deprecate).\n\n## api\n\n`var complain = require('complain');`\n\n### complain()\n<sup>\n`complain([String message1 [, String message2 [,...]]], [Object options])`\n</sup>\n\nCall `complain` within a function you are deprecating.  It will spit out all the messages to the console the first time _and only the first time_ the method is called.\n\n```js\n1  │ var complain = require('complain');\n2  │\n3  │ var someDeprecatedFunction = function() {\n4  │   complain('someDeprecatedFunction() is deprecated');\n5  │ };\n6  │\n…  │ // …\n30 │\n31 │ someDeprecatedFunction();\n```\n\n_program output:_\n\n<img width=\"373\" src=\"https://cloud.githubusercontent.com/assets/1958812/20812831/f2a1cde0-b7c7-11e6-93e6-1613e028e719.png\">\n\n#### Options\n\n**`location`**: a string in the format `${filepath}:${line}:${column}` indicating where the deprecated function was called from.  Setting this to `false` disables outputting the location and will only log the message once.\n\n### complain.method()\n<sup>\n`complain.method(Object proto, String methodName, [String message1 [, String message2 [,...]]], [Object options])`\n</sup>\n\nDeprecates a method on an object:\n\n```js\ncomplain.method(console, 'log', 'You should not log.');\n```\n\n### complain.fn()\n<sup>\n`complain.fn(Function func, [String message1 [, String message2 [,...]]], [Object options])`\n</sup>\n\nDeprecates a function and returns it:\n\n```js\nconsole.log = complain.fn(console.log, 'You should not log.');\n```\n\n### complain.color\n\nSet to `false` to disable color output.  Set to `true` to force color output.  Defaults to the value of `complain.stream.isTTY`.\n\n\n### complain.colors\n\nControls the colors used when logging. Default value:\n```js\n{\n  warning: '\\x1b[31;1m', // red, bold\n  message: false, // use system color\n  location: '\\u001b[90m' // gray\n}\n```\n\n_How the default looks on a dark background vs. a light background:_\n\n<img width=\"373\" src=\"https://cloud.githubusercontent.com/assets/1958812/20812831/f2a1cde0-b7c7-11e6-93e6-1613e028e719.png\"><img width=\"344\" src=\"https://cloud.githubusercontent.com/assets/1958812/20812832/f2a1edb6-b7c7-11e6-81f5-73319ae5f968.png\">\n\n### complain.silence\n\nWhen `true`, do nothing when the complain method is called.\n\n### complain.stream\n\nThe to which output is written.  Defaults to `process.stderr`.\n\n### complain.log(message)\n\nThe function used to log, by default this function writes to `complain.stream` and falls back to `console.warn`.\n\nYou can replace this with your own logging method.\n\n## license\n\nMIT\n",
  "readmeFilename": "README.md",
  "repository": {
    "type": "git",
    "url": "git://github.com/mlrawlings/complain.git"
  },
  "scripts": {
    "test": "mocha"
  },
  "version": "1.0.0"
}

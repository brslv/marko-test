{
  "_args": [
    [
      {
        "raw": "raptor-logging@^1.0.1",
        "scope": null,
        "escapedName": "raptor-logging",
        "name": "raptor-logging",
        "rawSpec": "^1.0.1",
        "spec": ">=1.0.1 <2.0.0",
        "type": "range"
      },
      "/Users/borislav/Development/Web/box/@Experimenting/marko/node_modules/marko"
    ]
  ],
  "_from": "raptor-logging@>=1.0.1 <2.0.0",
  "_id": "raptor-logging@1.1.2",
  "_inCache": true,
  "_location": "/raptor-logging",
  "_nodeVersion": "4.4.3",
  "_npmOperationalInternal": {
    "host": "packages-12-west.internal.npmjs.com",
    "tmp": "tmp/raptor-logging-1.1.2.tgz_1464734296005_0.7607356533408165"
  },
  "_npmUser": {
    "name": "pnidem",
    "email": "pnidem@gmail.com"
  },
  "_npmVersion": "2.15.1",
  "_phantomChildren": {},
  "_requested": {
    "raw": "raptor-logging@^1.0.1",
    "scope": null,
    "escapedName": "raptor-logging",
    "name": "raptor-logging",
    "rawSpec": "^1.0.1",
    "spec": ">=1.0.1 <2.0.0",
    "type": "range"
  },
  "_requiredBy": [
    "/marko"
  ],
  "_resolved": "https://registry.npmjs.org/raptor-logging/-/raptor-logging-1.1.2.tgz",
  "_shasum": "cff82c688f367b0c4c2fcd593ea4acb007ee2418",
  "_shrinkwrap": null,
  "_spec": "raptor-logging@^1.0.1",
  "_where": "/Users/borislav/Development/Web/box/@Experimenting/marko/node_modules/marko",
  "author": {
    "name": "Patrick Steele-Idem",
    "email": "pnidem@gmail.com"
  },
  "bin": {},
  "bugs": {
    "url": "https://github.com/raptorjs/raptor-logging/issues"
  },
  "dependencies": {
    "raptor-polyfill": "^1.0.0",
    "raptor-stacktraces": "^1.0.0"
  },
  "description": "Module to support the optimized delivery of web application resources",
  "devDependencies": {
    "chai": "~1.8.1",
    "mocha": "~1.15.1"
  },
  "directories": {},
  "dist": {
    "shasum": "cff82c688f367b0c4c2fcd593ea4acb007ee2418",
    "tarball": "https://registry.npmjs.org/raptor-logging/-/raptor-logging-1.1.2.tgz"
  },
  "gitHead": "aa853876ece31f0b8c19f717f495c7ff7cfbef86",
  "homepage": "https://github.com/raptorjs/raptor-logging#readme",
  "license": "Apache-2.0",
  "main": "lib/index.js",
  "maintainers": "Patrick Steele-Idem <pnidem@gmail.com>",
  "name": "raptor-logging",
  "optionalDependencies": {},
  "publishConfig": {
    "registry": "https://registry.npmjs.org/"
  },
  "readme": "raptor-logging\n==============\n\nSuper simple logging system that works on the server and and in the browser.\n\n# Example\n\n___projects/logging-test/run.js:___\n\n```javascript\nrequire('raptor-logging').configure({\n    loggers: {\n        'ROOT': 'WARN',\n        'logging-test': 'DEBUG'\n    }\n});\n\n// ...\n\nvar logger = require('raptor-logging').logger(module);\nlogger.debug('This is a debug message');\n```\n\nOutput:\n\n```\nDEBUG logging-test/run: This is a debug message\n```\n\nYou can also pass multiple arguments, as well as non-String arguments to the logging methods.\n\nFor example:\n\n```javascript\nvar logger = require('raptor-logging').logger(module);\nlogger.debug('This is a debug message', {foo: 'bar'});\n```\n\nOutput:\n\n```\nDEBUG logging-test/run: This is a debug message { foo: 'bar' }\n```\n\n# Installation\n\n```bash\nnpm install raptor-logging --save\n```\n\n# API\n\n## logger(module)\n\nReturns a new `Logger` instance whose name is based on the filename associated with the Node.js module object.\n\nExample:\n\n```javascript\nvar logger = require('raptor-logging').logger(module);\nlogger.debug('Hello World');\n```\n\n## logger(name)\n\nReturns a new `Logger` instance with the given name\n\nExample:\n\n```javascript\nvar logger = require('raptor-logging').logger('foo');\nlogger.debug('Hello World');\n```\n\nOutput:\n\n```\nDEBUG foo: Hello World\n```\n\n## configure(options)\n\nSupported options:\n\n- `loggers`: A mapping of logger prefixes to log levels (see below)\n- `appenders`: An array of appender instances (see [ConsoleAppender](./lib/ConsoleAppender.js) for an example appender implementation)\n\nExample:\n\n```javascript\nrequire('raptor-logging').configure({\n    'ROOT': 'WARN',\n    'foo': 'DEBUG',\n    'foo/bar': 'WARN',\n});\n```\n\n## Logger\n\nMethods:\n\n- isTraceEnabled() : boolean\n- isDebugEnabled() : boolean\n- isInfoEnabled() : boolean\n- isWarnEnabled() : boolean\n- isErrorEnabled() : boolean\n- isFatalEnabled() : boolean\n- dump(arg1, arg2, ...)\n- trace(arg1, arg2, ...)\n- debug(arg1, arg2, ...)\n- info(arg1, arg2, ...)\n- warn(arg1, arg2, ...)\n- error(arg1, arg2, ...)\n- fatal(arg1, arg2, ...)\n\n# Contributors\n\n* [Patrick Steele-Idem](https://github.com/patrick-steele-idem) (Twitter: [@psteeleidem](http://twitter.com/psteeleidem))\n\n# Contribute\n\nPull Requests welcome. Please submit Github issues for any feature enhancements, bugs or documentation problems.\n\n# License\n\nApache License v2.0\n\n",
  "readmeFilename": "README.md",
  "repository": {
    "type": "git",
    "url": "git+https://github.com/raptorjs/raptor-logging.git"
  },
  "scripts": {
    "test": "mocha --ui bdd --reporter spec  ./test"
  },
  "version": "1.1.2"
}

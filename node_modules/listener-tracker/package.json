{
  "_args": [
    [
      {
        "raw": "listener-tracker@^2.0.0",
        "scope": null,
        "escapedName": "listener-tracker",
        "name": "listener-tracker",
        "rawSpec": "^2.0.0",
        "spec": ">=2.0.0 <3.0.0",
        "type": "range"
      },
      "/Users/borislav/Development/Web/box/@Experimenting/marko/node_modules/marko"
    ]
  ],
  "_from": "listener-tracker@>=2.0.0 <3.0.0",
  "_id": "listener-tracker@2.0.0",
  "_inCache": true,
  "_location": "/listener-tracker",
  "_nodeVersion": "4.5.0",
  "_npmOperationalInternal": {
    "host": "packages-12-west.internal.npmjs.com",
    "tmp": "tmp/listener-tracker-2.0.0.tgz_1482273205601_0.146020180080086"
  },
  "_npmUser": {
    "name": "pnidem",
    "email": "pnidem@gmail.com"
  },
  "_npmVersion": "2.15.9",
  "_phantomChildren": {},
  "_requested": {
    "raw": "listener-tracker@^2.0.0",
    "scope": null,
    "escapedName": "listener-tracker",
    "name": "listener-tracker",
    "rawSpec": "^2.0.0",
    "spec": ">=2.0.0 <3.0.0",
    "type": "range"
  },
  "_requiredBy": [
    "/marko"
  ],
  "_resolved": "https://registry.npmjs.org/listener-tracker/-/listener-tracker-2.0.0.tgz",
  "_shasum": "39608b435c0901fa5510217c1452728d6bc19b5f",
  "_shrinkwrap": null,
  "_spec": "listener-tracker@^2.0.0",
  "_where": "/Users/borislav/Development/Web/box/@Experimenting/marko/node_modules/marko",
  "author": {
    "name": "Patrick Steele-Idem",
    "email": "pnidem@gmail.com"
  },
  "bugs": {
    "url": "https://github.com/patrick-steele-idem/listener-tracker/issues"
  },
  "dependencies": {},
  "description": "Allows event listeners to be tracked for easy removal",
  "devDependencies": {
    "browserify": "^13.0.1",
    "chai": "^1.10.0",
    "jshint": "^2.5.0",
    "karma": "^0.13.22",
    "karma-browserify": "^5.0.5",
    "karma-chai": "^0.1.0",
    "karma-lasso": "^2.0.0",
    "karma-mocha": "^1.0.1",
    "karma-mocha-reporter": "^2.0.4",
    "karma-phantomjs-launcher": "^1.0.0",
    "lasso": "^2.5.3",
    "lasso-require": "^1.8.0",
    "mocha": "^2.1.0",
    "phantomjs-prebuilt": "^2.1.7",
    "watchify": "^3.7.0"
  },
  "directories": {},
  "dist": {
    "shasum": "39608b435c0901fa5510217c1452728d6bc19b5f",
    "tarball": "https://registry.npmjs.org/listener-tracker/-/listener-tracker-2.0.0.tgz"
  },
  "gitHead": "593c494c747a14e1bd54c5b71d3075d42e9c09a1",
  "homepage": "https://github.com/patrick-steele-idem/listener-tracker#readme",
  "keywords": [
    "events",
    "listeners",
    "EventEmitter"
  ],
  "license": "Apache-2.0",
  "main": "lib/listener-tracker.js",
  "maintainers": [
    {
      "name": "Patrick Steele-Idem",
      "email": "pnidem@gmail.com"
    },
    {
      "name": "Phil Gates-Idem",
      "email": "phillip.idem@gmail.com"
    }
  ],
  "minprops": {
    "matchPrefix": "$__"
  },
  "name": "listener-tracker",
  "optionalDependencies": {},
  "publishConfig": {
    "registry": "https://registry.npmjs.org/"
  },
  "readme": "listener-tracker\n=============\n\n[![Build Status](https://travis-ci.org/raptorjs/listener-tracker.svg?branch=master)](https://travis-ci.org/raptorjs/listener-tracker)\n\nLightweight module to support tracking added event listeners for easy removal later.\n\n# Installation\n\n```\nnpm install listener-tracker --save\n```\n\n# Overview\n\nThe native Node.js events module makes it difficult to remove listeners since you must keep a reference to the listener function in order to remove it later. For example, to properly remove a listener you must do the following:\n\n```javascript\nfunction fooListener() {\n    /* ... */\n}\n\n// Add a listener:\neventEmitter.on('foo', fooListener);\n\n// Now remove it:\neventEmitter.removeListener('foo', fooListener);\n```\n\nThis is a problem because often times it is more convenient to add listeners with an anonymous function. For example:\n\n```javascript\n// Add a listener:\neventEmitter.on('foo', function fooListener() {\n    /* ... */\n});\n\n// How can we remove it???\n```\n\nAlso, what if an object is being destroyed and needs to remove all listeners that were added to other `EventEmitter` instances? This module solves these types of problems by keeping tracking of all listeners that are attached by proxying all of the methods that are used to add listeners (i.e. `on`, `once` and `addListener`).\n\nTo prevent a memory leak resulting from keeping references to all of the listener functions that were attached, this module will automatically do cleanup if a target `EventEmitter` emits a `destroy` event. You can also manually remove all listeners, of course.\n\n# Usage\n\n## Tracking listeners for a single `EventEmitter` instance for easy removal\n\n```javascript\nvar EventEmitter = require('events').EventEmitter;\n\nvar myEventEmitter = EventEmitter();\nvar wrapped = require('listener-tracker').wrap(myEventEmitter);\n\nwrapped\n    .on('foo', function() { /* ... */ })\n    .on('bar', function() { /* ... */ });\n\n// Remove all of the listenters that were tracked by this instance:\nwrapped.removeAllListeners();\n\n// Remove the listenters that were tracked by this instance for a specific event:\nwrapped.removeAllListeners('foo');\n```\n\n## Tracking listeners to multiple `EventEmitter` instances for easy removal\n\n```javascript\nvar EventEmitter = require('events').EventEmitter;\n\nvar listenerTracker = require('listener-tracker').createTracker();\nvar eventEmitter1 = EventEmitter();\nvar eventEmitter2 = EventEmitter();\n\nlistenerTracker.subscribeTo(eventEmitter1)\n    .on('foo', function() { /* ... */ })\n    .on('bar', function() { /* ... */ });\n\nlistenerTracker.subscribeTo(eventEmitter2)\n    .on('foo', function() { /* ... */ })\n    .on('bar', function() { /* ... */ });\n\n// Remove all listeners across all EventEmitters that were subscribed to:\nlistenerTracker.removeAllListeners();\n\n// It's also possible to remove just listeners from one of the event emitters:\nlistenerTracker.removeAllListeners(eventEmitter1);\n\n// Finally, it's also possible to remove just listeners from one of the event\n// emitters for a specific event type:\nlistenerTracker.removeAllListeners(eventEmitter1, 'foo');\n```\n\n# Contributors\n\n* [Patrick Steele-Idem](https://github.com/patrick-steele-idem) (Twitter: [@psteeleidem](http://twitter.com/psteeleidem))\n* [Phillip Gates-Idem](https://github.com/philidem/) (Twitter: [@philidem](https://twitter.com/philidem))\n\n# Contribute\n\nPull Requests welcome. Please submit Github issues for any feature enhancements, bugs or documentation problems.\n\n# License\n\nApache License v2.0\n",
  "readmeFilename": "README.md",
  "repository": {
    "type": "git",
    "url": "git+https://github.com/patrick-steele-idem/listener-tracker.git"
  },
  "scripts": {
    "test": "npm run test-server && npm run test-client && jshint lib/",
    "test-client": "node_modules/karma/bin/karma start",
    "test-server": "mocha --ui bdd --reporter spec ./test"
  },
  "version": "2.0.0"
}
